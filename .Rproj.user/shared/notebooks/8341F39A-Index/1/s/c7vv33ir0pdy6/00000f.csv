"0","# Create a new data frame from top_combinations"
"0","create_summary_df <- function(top_combinations) {"
"0","  # Initialize an empty list to store data"
"0","  summary_list <- list()"
"0","  "
"0","  # Initialize the combination number"
"0","  comb_number <- 1"
"0","  "
"0","  # Loop through top_combinations and extract the required information"
"0","  for (i in seq_along(top_combinations)) {"
"0","    comb <- top_combinations[[i]]"
"0","    "
"0","    # Extract current combination's total ShadowEP and FireRes"
"0","    current_shadow_ep <- comb$total_shadow_ep"
"0","    current_fire_res <- comb$total_fire_res"
"0","    "
"0","    # For the first combination, we don't need to check the previous values"
"0","    if (i > 1) {"
"0","      prev_comb <- top_combinations[[i - 1]]"
"0","      prev_shadow_ep <- prev_comb$total_shadow_ep"
"0","      prev_fire_res <- prev_comb$total_fire_res"
"0","      "
"0","      # Check if both total ShadowEP and total FireRes are different from the previous combination"
"0","      if (current_shadow_ep != prev_shadow_ep || current_fire_res != prev_fire_res) {"
"0","        comb_number <- comb_number + 1"
"0","      }"
"0","    }"
"0","    "
"0","    # Stop if comb_number exceeds 11"
"0","    if (comb_number > 10) break"
"0","    "
"0","    # Create a data frame for each combination"
"0","    comb_df <- data.frame("
"0","      CombinationNumber = comb_number,"
"0","      Slot = comb$Slot,"
"0","      Item = comb$Item,"
"0","      TotalShadowEP = comb$total_shadow_ep,"
"0","      TotalFireRes = comb$total_fire_res,"
"0","      stringsAsFactors = FALSE"
"0","    )"
"0","    "
"0","    # Append to the summary list"
"0","    summary_list[[i]] <- comb_df"
"0","  }"
"0","  "
"0","  # Combine all data frames in the summary list into a single data frame"
"0","  summary_df <- do.call(rbind, summary_list)"
"0","  "
"0","  return(summary_df)"
"0","}# Create a new data frame from top_combinations"
"0","create_summary_df <- function(top_combinations) {"
"0","  # Initialize an empty list to store data"
"0","  summary_list <- list()"
"0","  "
"0","  # Initialize the combination number"
"0","  comb_number <- 1"
"0","  "
"0","  # Loop through top_combinations and extract the required information"
"0","  for (i in seq_along(top_combinations)) {"
"0","    comb <- top_combinations[[i]]"
"0","    "
"0","    # Extract current combination's total ShadowEP and FireRes"
"0","    current_shadow_ep <- comb$total_shadow_ep"
"0","    current_fire_res <- comb$total_fire_res"
"0","    "
"0","    # For the first combination, we don't need to check the previous values"
"0","    if (i > 1) {"
"0","      prev_comb <- top_combinations[[i - 1]]"
"0","      prev_shadow_ep <- prev_comb$total_shadow_ep"
"0","      prev_fire_res <- prev_comb$total_fire_res"
"0","      "
"0","      # Check if both total ShadowEP and total FireRes are different from the previous combination"
"0","      if (current_shadow_ep != prev_shadow_ep || current_fire_res != prev_fire_res) {"
"0","        comb_number <- comb_number + 1"
"0","      }"
"0","    }"
"0","    "
"0","    # Stop if comb_number exceeds 11"
"0","    if (comb_number > 10) break"
"0","    "
"0","    # Create a data frame for each combination"
"0","    comb_df <- data.frame("
"0","      CombinationNumber = comb_number,"
"0","      Slot = comb$Slot,"
"0","      Item = comb$Item,"
"0","      TotalShadowEP = comb$total_shadow_ep,"
"0","      TotalFireRes = comb$total_fire_res,"
"0","      stringsAsFactors = FALSE"
"0","    )"
"0","    "
"0","    # Append to the summary list"
"0","    summary_list[[i]] <- comb_df"
"0","  }"
"0","  "
"0","  # Combine all data frames in the summary list into a single data frame"
"0","  summary_df <- do.call(rbind, summary_list)"
"0","  "
"0","  return(summary_df)"
"0","}"
