"0",""
"0","# Function to get top combinations based on ShadowEP"
"0","get_top_combinations_by_shadow_ep <- function(combinations, top_n = 250) {"
"0","  # Calculate the sum of ShadowEP and FireRes for each combination"
"0","  combinations_with_totals <- lapply(combinations, function(comb) {"
"0","    total_shadow_ep <- sum(comb$ShadowEP)"
"0","    total_fire_res <- sum(comb$FireRes)"
"0","    comb$total_shadow_ep <- total_shadow_ep"
"0","    comb$total_fire_res <- total_fire_res"
"0","    return(comb)"
"0","  })"
"0","  "
"0","  # Convert list to data frame for sorting"
"0","  combinations_with_totals_df <- do.call(rbind, lapply(combinations_with_totals, function(comb) {"
"0","    data.frame("
"0","      Slot = comb$Slot,"
"0","      Item = comb$Item,"
"0","      ShadowEP = comb$ShadowEP,"
"0","      FireRes = comb$FireRes,"
"0","      Tier = comb$Tier,"
"0","      total_shadow_ep = comb$total_shadow_ep,"
"0","      total_fire_res = comb$total_fire_res,"
"0","      stringsAsFactors = FALSE"
"0","    )"
"0","  }))"
"0","  "
"0","  # Ensure the total_shadow_ep column is numeric"
"0","  combinations_with_totals_df$total_shadow_ep <- as.numeric(combinations_with_totals_df$total_shadow_ep)"
"0","  "
"0","  # Sort combinations by total ShadowEP in descending order"
"0","  sorted_combinations_df <- combinations_with_totals_df[order(combinations_with_totals_df$total_shadow_ep, decreasing = TRUE), ]"
"0","  "
"0","  # Extract top N combinations"
"0","  top_combinations_df <- head(sorted_combinations_df, top_n)"
"0","  "
"0","  # Convert back to list of data frames"
"0","  top_combinations <- split(top_combinations_df, seq(nrow(top_combinations_df)))"
"0","  "
"0","  # Print the structure of top combinations for debugging"
"0","  #print(lapply(top_combinations, str))"
"0","  "
"0","  return(top_combinations)"
"0","}"
